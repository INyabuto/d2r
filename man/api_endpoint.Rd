% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_endpoint.R
\name{api_endpoint}
\alias{api_endpoint}
\alias{parse_api_params}
\alias{build_api_endpoint
Build an API link from a list}
\alias{build_api_endpoint}
\title{Generate DHIS2 API endpoint}
\usage{
api_endpoint(
  ...,
  resource = "resources",
  id = NULL,
  path = NULL,
  version = NULL
)

parse_api_params(..., resource = NULL, id = NULL, path = NULL, version = NULL)

build_api_endpoint(api_params)
}
\arguments{
\item{...}{Additional parameters parsed to \code{\link{api_query}}.}

\item{resource}{A character string, the DHIS2 resource name, example `dataElements`}

\item{id}{A character string, the Unique Identifier for this Object.}

\item{path}{A character string, specifies a sub directory of the resource.}

\item{version}{An integer, the version of DHIS2 web API. The default version is
current supported version, you can override this using the \code{\link{api_version}} or by
setting the value explicitly.}

\item{api_params}{A list, the parsed api parameters.}
}
\value{
A string. DHIS2 web API link

An S3 object of class `dhis2_api_params`
}
\description{
This function returns a DHIS2 API endpoint, used for browsing DHIS2 web
resources from R. Useful for constructing, defining, or parsing API
parameters quickly.

This function parse DHIS2 API endpoint parameters into a list object.
}
\examples{
# default api link - the resource endpoint
api_endpoint()
# navigate to dataElements endpoint
api_endpoint(resource = "dataElements")
# select data elements name, id and shortNames
api_endpoint(resource = "dataElements", fields = c("name","id","shortNames"))
# arrange the data elements name in ascending order
api_endpoint(resource = "dataElements", fields = c("name","id","shortNames"),
   order = api_order("name", by = "asc"))
# default resource endpoint
api_params <- parse_api_params()
# api params with query object
api_params <- parse_api_params(resource = "dataElements", field = c("name","code","id"))
}
